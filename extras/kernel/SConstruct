#!/usr/bin/python

import os
import distutils.sysconfig as sysconfig
from cxxflags import test_env_cxxflags, boost_python_env_cxxflags

platform=Environment()["PLATFORM"]
print platform

## For Python interface only
pif_conv = Split("cppvec_conv_pif.cpp cpppointer_conv_pif.cpp cppmap_conv_pif.cpp ")
pif = Split("flow_pif.cpp analyzer_pif.cpp label_pif.cpp")
filenames = ['analyzer', 'label']
files = [filename + '.cpp' for filename in filenames]
test_files = ['test_seg_fault.cpp']

if os.path.isfile('/etc/debian_version') and not 'x86_64' in os.popen('uname -a').readline():
    env = Environment(
        LIBS=['ANN', 'm', 'pthread'],
        LIBPATH=['/usr/local/src/ann_1.1.1/lib'],
        CPPPATH=['/usr/local/src/ann_1.1.1/include/ANN'],
        RPATH=[],
        CXXFLAGS=test_env_cxxflags(),
        )

if os.path.isfile('/etc/debian_version') and 'x86_64' in os.popen('uname -a').readline():
    env = Environment(
        LIBS=['ANN', 'm', 'pthread'],
        LIBPATH=['/usr/local/src/ann_1.1.1/lib'],
        CPPPATH=['/usr/local/src/ann_1.1.1/include/ANN'],
        RPATH=[],
        CXXFLAGS=test_env_cxxflags(),
        )

if platform=='win32':
    env = Environment(
        LIBS=['ANN'],
        LIBPATH=['C:/Boost/lib', 'C:/ANN/ann_1.1.1/MS_Win32/dll/Release', 'C:/ANN/ann_1.1.1/MS_Win32/bin'],
        CPPPATH=['C:/Boost/include/boost-1_33_1', 'C:/ANN/ann_1.1.1/include/ANN'],
        RPATH=[],
        CXXFLAGS='-Wall -w -DANSI -EHsc /D "WIN32"',
        )

if platform=='darwin':
    env = Environment(
        LIBS=['ANN', 'python2.5'],
        LIBPATH=['/usr/local/lib', '/Users/cliburn/ann_1.1.1/lib', '/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/config'],
        CPPPATH=['/usr/local/include/boost-1_34', '/Users/cliburn/ann_1.1.1/include/ANN', sysconfig.get_python_inc()],
        LINKFLAGS=['-framework Python'],
        RPATH=[],
        CXXFLAGS='-Wall -Wno-long-long',
        )

if platform =='posix' and 'FreeBSD' in os.popen('uname -a').readline():
    env = Environment(
        LIBS=['ANN', 'm', 'pthread', 'python2.5'],
        LIBPATH=['/home/jolly/work/libann/ann_1.1.1/lib', '/usr/local/lib', '/usr/local/lib/python2.5'],
        CPPPATH=['/home/jolly/work/libann/ann_1.1.1/include/ANN', '/usr/local/include/', '/usr/local/include/python2.5'],
        RPATH=[],
        CXXFLAGS='-Wall -Wno-long-long',
        )

# Test program(s)
program = env.Program(files + test_files)
env.Install('bin', program)

if os.path.isfile('/etc/debian_version') and not 'x86_64' in os.popen('uname -a').readline():
    bp = env.Copy()
    bp.Append(CPPPATH="/usr/include/python2.4",
              CPPDEFINES=['BOOST_PYTHON_DYNAMIC_LIB '],
              LIBS=["python2.4", "boost_python"],
              CXXFLAGS=boost_python_env_cxxflags()
              )
    bp.Replace(LIBPATH=['/usr/local/src/ann_1.1.1/lib', '/usr/lib/python2.4/config', '/usr/local/lib'], SHLIBPREFIX="")

if os.path.isfile('/etc/debian_version') and 'x86_64' in os.popen('uname -a').readline():
    bp = env.Copy()
    bp.Append(CPPPATH="/usr/include/python2.4",
              CPPDEFINES=['BOOST_PYTHON_DYNAMIC_LIB '],
              LIBS=["python2.4", "boost_python"],
              CXXFLAGS=boost_python_env_cxxflags())
    bp.Replace(LIBPATH=["/usr/lib/python2.4/config", '/usr/local/lib'], SHLIBPREFIX="")

if platform=='win32':
    bp = Environment(
        LIBS=['ANN', "boost_python-vc80-mt-1_33_1"],
        LIBPATH=['C:/Boost/lib', 'C:/ANN/ann_1.1.1/MS_Win32/dll/Release', 'C:/ANN/ann_1.1.1/MS_Win32/bin', 'C:/Python24/libs'],
        CPPPATH=['C:/Boost/include/boost-1_33_1', 'C:/ANN/ann_1.1.1/include/ANN', 'C:/Python24/include'],
        RPATH=[],
        CXXFLAGS='-Wall -w -DANSI -EHsc /GR /D "WIN32"', OBJSUFFIX='.objs'
        )

if platform=='darwin':
    bp = Environment(
        CPPDEFINES=[],
        LIBS=['ANN', 'python2.5', 'boost_python-1_34'],
        LIBPATH=['/usr/local/lib', '/Library/Frameworks/Python.framework/Versions/2.5/lib/python2.5/config/', '/Users/cliburn/ann_1.1.1/lib'],
        CPPPATH=['/usr/local/include/boost-1_34', '/Users/cliburn/ann_1.1.1/include/ANN', sysconfig.get_python_inc()],
        RPATH=[],
        LINKFLAGS = '-framework Python', 
        CXXFLAGS='-bundle -Wall -Wno-long-long -fno-strict-aliasing -fPIC -no-cpp-precomp -ftemplate-depth-130 -w -DBOOST_DISABLE_THREADS',
        SHLIBSUFFIX = '.dylib',
        EXTENSION_MODULE_SUFFIX='.so',
        )

if platform =='posix' and 'FreeBSD' in os.popen('uname -a').readline():
    bp = env.Copy()
    bp.Append(CPPPATH=["/usr/local/include/python2.5"],
              CPPDEFINES=['BOOST_PYTHON_DYNAMIC_LIB '],
              LIBS=["python2.5", "boost_python"],
              CXXFLAGS=boost_python_env_cxxflags(),
              # CXXFLAGS="-fPIC"
              ) #gets rid of lib prefix
    bp.Replace(LIBPATH=["/usr/local/lib/python2.5/config", '/usr/local/lib', '/home/jolly/work/libann/ann_1.1.1/lib'], SHLIBPREFIX="")

# Boost python shared library.
bp.SharedLibrary(target='flow', source = files + pif_conv + pif)

# hack to put shared library in correct path
os.system('mv libflow.dylib ../../src/plugins/statistics/Kde/')
os.system('cd ../src/plugins/statistics')
os.system('ln -sf libflow.dylib flow.so')
